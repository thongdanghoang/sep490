services:
  web:
    image: thongdh3401/sep490-frontend:0.5.5
    environment:
      OIDC_CLIENT_ID: greenbuildings
      OIDC_AUTHORITY: ${OIDC_AUTHORITY}
      IDP_API: ${IDP_API}
      ENTERPRISE_API: ${ENTERPRISE_API}
    ports:
      - "127.0.0.1:4200:4200"
    depends_on:
      - idp
      - enterprise
  enterprise:
    image: thongdh3401/sep490-enterprise:0.5.6
    ports:
      - "127.0.0.1:8080:8080"
    environment:
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      DB_HOST: sep490_databases
      DB_NAME: sep490_enterprise
      DB_PORT: 5432
      ISSUER_URI: ${ISSUER_URI}
      POSTGRES_USER: ${ENTERPRISE_POSTGRES_USER}
      POSTGRES_PASSWORD: ${ENTERPRISE_POSTGRES_PASSWORD}
      EXCHANGERATE_API_KEY: ${EXCHANGERATE_API_KEY}
      PAYOS_CLIENT_ID: ${PAYOS_CLIENT_ID}
      PAYOS_API_KEY: ${PAYOS_API_KEY}
      PAYOS_CHECKSUM_KEY: ${PAYOS_CHECKSUM_KEY}
      SPLUNK_URL: ${SPLUNK_URL}
      SPLUNK_HOST: ${SPLUNK_HOST}
      ENTERPRISE_SPLUNK_TOKEN: ${ENTERPRISE_SPLUNK_TOKEN}
      ENTERPRISE_SPLUNK_INDEX: ${ENTERPRISE_SPLUNK_INDEX}
      ENTERPRISE_SPLUNK_SOURCE: ${ENTERPRISE_SPLUNK_SOURCE}
    depends_on:
      - idp
      - sep490_databases
      - kafka
  idp:
    image: thongdh3401/sep490-idp:0.5.6
    ports:
      - "127.0.0.1:8180:8080"
    environment:
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      DB_HOST: sep490_databases
      DB_NAME: sep490_idp
      DB_PORT: 5432
      OIDC_CLIENT_ID: greenbuildings
      OIDC_POST_LOGOUT_REDIRECT_URI: ${OIDC_REDIRECT_URI}
      OIDC_REDIRECT_URI: ${OIDC_POST_LOGOUT_REDIRECT_URI}
      POSTGRES_USER: ${IDP_POSTGRES_USER}
      POSTGRES_PASSWORD: ${IDP_POSTGRES_PASSWORD}
      SMTP_HOST: sep490_mailhog
      SMTP_PORT: 1025
      SPLUNK_URL: ${SPLUNK_URL}
      SPLUNK_HOST: ${SPLUNK_HOST}
      IDP_SPLUNK_TOKEN: ${IDP_SPLUNK_TOKEN}
      IDP_SPLUNK_INDEX: ${IDP_SPLUNK_INDEX}
      IDP_SPLUNK_SOURCE: ${IDP_SPLUNK_SOURCE}
      PASSKEYS_RP_NAME: ${PASSKEYS_RP_NAME}
      PASSKEYS_RP_ID: ${PASSKEYS_RP_ID}
      PASSKEYS_ALLOWED_ORIGINS: ${PASSKEYS_ALLOWED_ORIGINS}
    depends_on:
      - sep490_databases
      - kafka
      - sep490_mailhog
  sep490_databases:
    image: postgres:16.4
    container_name: sep490_databases
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - ./postgres/init-db.sql:/docker-entrypoint-initdb.d/init.sql
      - postgresql:/var/lib/postgresql
      - postgresql_data:/var/lib/postgresql/data

  sep490_redis:
    image: redis:7.4.1-alpine
    container_name: sep490_redis
    command: redis-server --appendonly yes
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3
    ports:
      - "127.0.0.1:6379:6379"

  sep490_mailhog:
    image: mailhog/mailhog
    container_name: sep490_mailhog
    ports:
      - "127.0.0.1:1025:1025"
      - "127.0.0.1:8025:8025"

  sep490_minio:
    image: quay.io/minio/minio
    container_name: sep490_minio
    command: server /data --console-address ":9001"
    ports:
      - "127.0.0.1:9000:9000"
      - "127.0.0.1:9001:9001"
    healthcheck:
      test: [ "CMD", "mc", "ready", "local" ]
      interval: 30s
      timeout: 5s
      retries: 5
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}

  kafka:
    image: apache/kafka:3.9.0
    container_name: sep490_kafka
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
volumes:
  postgresql:
  postgresql_data: